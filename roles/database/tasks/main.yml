---
- name: Test Connection
  hosts: web:&{{ env }}
  gather_facts: false
  vars:
    dynamic_user: false
  roles:
    - { role: connection, tags: [connection, always] }

- name: Pull database from {{ env }} to development
  hosts: web:&{{ env }}
  remote_user: "{{ web_user }}"
  pre_tasks:
    - name: Ensure site is valid
      connection: local
      fail:
        msg: "Site `{{ site | default('') }}` is not valid. Available sites to deploy: {{ wordpress_sites.keys() | join(', ') }}"
      when: wordpress_sites[site | default('')] is not defined
    - name: Abort if env variable is equal to development
      fail:
        msg: "ERROR: development is not a valid environment for this mode (you can't pull from development to development)."
      when: env == "development"

- name: Check if {{ site }} folder exists
  delegate_to: development_host
  stat:
    path: "{{ project_root }}"
  register: result

- name: Abort if {{ site }} folder doesn't exists
  fail:
    msg: "ERROR: {{ site }} is not a valid site name ({{ site }} folder does not exist)."
  when: result.stat.exists is defined and result.stat.exists == false or result.stat.isdir is defined and result.stat.isdir == false

- block:
  - name: Create database_backup directory if it doesn't exist
    delegate_to: development_host
    file:
      path: "{{ project_web_dir }}/database_backup"
      state: directory
      mode: 0755

  - name: Create database dump on {{ env }}
    shell: wp db export --allow-root - | gzip > {{ dump_file }}
    args:
      chdir: "{{ project_web_dir }}"

  - name: Pull database dump from {{ env }} to development
    fetch:
      src: "{{ project_web_dir }}/{{ dump_file }}"
      dest: "{{ local_bedrock_dir }}/"
      flat: yes

  - name: Delete database dump from {{ env }}
    shell: rm -f {{ dump_file }}
    args:
      chdir: "{{ project_web_dir }}"
      warn: false

  - name: Export development database before importing dump (backup)
    delegate_to: development_host
    shell: wp db export - | gzip > database_backup/{{ backup_file }}
    args:
      chdir: "{{ project_web_dir }}"

  - name: Import database dump on development
    delegate_to: development_host
    shell: gzip -c -d {{ dump_file }} | wp db import -
    args:
      chdir: "{{ project_web_dir }}"

  - name: Delete database dump from development
    delegate_to: development_host
    shell: rm -f {{ dump_file }}
    args:
      chdir: "{{ project_web_dir }}"
      warn: false

  - name: Search for {{ url_from }} and replace with {{ url_to }} on development
    delegate_to: development_host
    command: wp search-replace '//{{ url_from }}' '//{{ url_to }}' --allow-root --all-tables
    args:
      chdir: "{{ project_web_dir }}"
    tags: ['search-replace']
  when: result.stat.exists is defined and result.stat.exists and result.stat.isdir is defined and result.stat.isdir
